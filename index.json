[{"content":"Sekedar dokumentasi dari permasalahan yang pernah saya jumpai. Terkadang dari sisi aplikasi tidak siap untuk dipublikasi secara HTTPS karena di dalam source code-nya masih ter-hardcoded beberapa resource eksternal menggunakan protokol HTTP.\nHal ini membuat kebanyakan web browser mengeluh dan enggan untuk memuat resource yang dipanggil dari protokol HTTP tadi.\nMaka solusinya ada 2:\n Edit source code-nya, ganti semua kode yang memanggil resource dari HTTP menjadi HTTPS. Dari sisi Reverse-Proxy, tinggal tambahkan header berikut:  add_header \u0026#39;Content-Security-Policy\u0026#39; \u0026#39;upgrade-insecure-requests\u0026#39;; Kali ini saya akan membahas solusi untuk Reverse-Proxy Nginx\nContoh konfigurasi server block dan penempatan header :\nserver { listen 443 ssl http2; server_name namawebsite.tld; root /var/www/public_html; ... konfigurasi ssl ... add_header \u0026#39;Content-Security-Policy\u0026#39; \u0026#39;upgrade-insecure-requests\u0026#39;; \u0026lt;-- Taruh disini, di dalam server block dan diluar block location location / { ... konfigurasi ... } } Semoga bermanfaat, insyaAllah.\n","permalink":"https://blog.annahri.com/posts/nginx-reverse-proxy-mixed-content/","summary":"Sekedar dokumentasi dari permasalahan yang pernah saya jumpai. Terkadang dari sisi aplikasi tidak siap untuk dipublikasi secara HTTPS karena di dalam source code-nya masih ter-hardcoded beberapa resource eksternal menggunakan protokol HTTP.\nHal ini membuat kebanyakan web browser mengeluh dan enggan untuk memuat resource yang dipanggil dari protokol HTTP tadi.\nMaka solusinya ada 2:\n Edit source code-nya, ganti semua kode yang memanggil resource dari HTTP menjadi HTTPS. Dari sisi Reverse-Proxy, tinggal tambahkan header berikut:  add_header \u0026#39;Content-Security-Policy\u0026#39; \u0026#39;upgrade-insecure-requests\u0026#39;; Kali ini saya akan membahas solusi untuk Reverse-Proxy Nginx","title":"Membenahi Kendala mixed-content pada Nginx yang berperan sebagai Reverse-Proxy"},{"content":"Saya akan menjelaskan beberapa tips dan trik dalam menggunakan shell bash yang biasa saya gunakan sehari-hari.\nReverse Search Sebagian orang biasa menggunakan history untuk melihat/mencari command-command sebelumnya yang sudah pernah diinputkan. Atau bahkan menggunakan arrow key atas untuk mencari command yang diinginkan.\nSebenarnya hampir kebanyakan shell memiliki fitur reverse search. Sesuai namanya, fitur ini bisa melakukan pencarian terhadap command yang sebelumya pernah diinputkan.\nBagaimana caranya? Cukup menekan CTRL+Rpada terminal. Dan ketikkan kata kunci untuk command yang sedang dicari.\n(reverse-i-search)`apt\u0026#39;: sudo apt install hugo ^ ^ | |- history terakhir yang paling relevan |- keyword Sintaks Spesial !!, !$ dan !n Sintaks !! Pada bash shell (atau shell yang lain juga, mungkin) menrujuk kepada command terakhir yang diinputkan.\nJadi, jika sebelumnya kita menginputkan, misal, perintah echo abc. Lalu pada input berikutnya jika kita memasukkan !! maka, shell akan mengeksekusi kembali perintah echo abc.\nuser@host:~$ echo abc abc user@host:~$ !! echo abc \u0026lt;--- terminal tidak benar-benar mengeluarkan output ini, hanya sebagai penjelasan ekspansi shell saja abc Ini sangat berguna ketika kita lupa hendak menambahkan sudo pada suatu command yang panjang. Maka, pada input berikutnya, kita tinggal ketikkan sudo !! tanpa perlu mengetik ulang command sebelumnya.\nuser@host:~$ apt install -y package1 package2 package3 package4 package5 E: Could not open lock file /var/lib/dpkg/lock-frontend - open (13: Permission denied) E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), are you root? user@host:~$ sudo !! sudo apt install -y package1 package2 package3 package4 package5 ... Sintaks !$ Sintaks ini merujuk pada positional argument pada command terakhir. Sama seperti contoh sebelumnya, jika echo abc maka ekspansi dari !$ adalah abc.\nKasus penggunaan sintaks ini biasanya saat melakukan editing file. Seperti di bawah ini:\nuser@host:~$ cat /path/panjang/menuju/file isi file user@host:~$ vim !$ vim /path/panjang/menuju/file ... Jadi tidak perlu lagi mengetik ulang path panjang file yang dituju, tapi cukup gunakan sintaks !$ saja.\nSintaks !n Huruf n merujuk kepada angka pada history shell. Jika kita menjalankan perintah history maka tiap-tiap baris history terdapat angka disebelahnya (kecual jika konfigurasi untuk history sudah tidak default). Nah, dengan menggunakan !n maka shell akan mengulangi command yang sama sesuai dengan nomor yang tertera.\nContoh:\nuser@host:~$ history 1 ll 2 ls 3 lsblk 4 history user@host:~$ !1 ll total 20 drwxr-xr-x 1 user user 110 Nov 5 07:23 ./ drwxr-xr-x 1 root root 42 Nov 5 07:22 ../ -rw-r--r-- 1 user user 220 Nov 5 07:22 .bash_logout -rw-r--r-- 1 user user 3771 Nov 5 07:22 .bashrc drwx------ 1 user user 0 Nov 5 07:23 .cache/ drwxr-xr-x 1 user user 40 Nov 5 07:22 .config/ -rw-r--r-- 1 user user 5 Nov 5 07:22 .hidden -rw-r--r-- 1 user user 87 Nov 5 07:22 .inputrc -rw-r--r-- 1 user user 807 Nov 5 07:22 .profile Pintasan Clear Screen clear Command clear digunakan untuk membersihkan sesi layar shell. Agar lebih cepat, cukup tekan kombinasi tombol CTRL+L.\n Bersambung, insyaAllah\n","permalink":"https://blog.annahri.com/posts/trik-bash-shell-1/","summary":"Saya akan menjelaskan beberapa tips dan trik dalam menggunakan shell bash yang biasa saya gunakan sehari-hari.\nReverse Search Sebagian orang biasa menggunakan history untuk melihat/mencari command-command sebelumnya yang sudah pernah diinputkan. Atau bahkan menggunakan arrow key atas untuk mencari command yang diinginkan.\nSebenarnya hampir kebanyakan shell memiliki fitur reverse search. Sesuai namanya, fitur ini bisa melakukan pencarian terhadap command yang sebelumya pernah diinputkan.\nBagaimana caranya? Cukup menekan CTRL+Rpada terminal. Dan ketikkan kata kunci untuk command yang sedang dicari.","title":"Trik Bash Shell #1"},{"content":"Saya akan menjelaskan cara mudah untuk resize disk suatu VM dengan konfigurasi LVM. Asumsinya, disk sudah diextend dari sisi HVnya (PVE, ESXi, dll).\nPastikan penambahan space sudah terdeteksi dari VM melalui dmesg dan Anda akan mendapati informasi seperti ini:\n[262733.527587] sd 0:0:2:0: [abc] 4096-byte physical blocks [262733.528263] abc: detected capacity change from 214748364800 to 429496729600 Kalau ternyata belum terdeteksi, bisa dicoba untuk menjalankan perintah ini\necho 1 \u0026gt; /sys/class/block/\u0026lt;disk\u0026gt;/device/rescan Lalu coba cek kembali di dmesg. Kalau sudah muncul bisa langsung jalankan perintah berikut:\ngrowpart /dev/\u0026lt;disk\u0026gt; \u0026lt;no-partisi\u0026gt; # contoh `growpart /dev/sda 1` pvresize /dev/\u0026lt;partisi\u0026gt; # contoh `pvresize /dev/sda1` lvresize --extents +100%FREE --resizefs /dev/xxx/yyy # Value xxx yyy merujuk pada logical volume path Khusus untuk growpart jika tidak tersedia pada sistem Anda, maka bisa Anda gunakan parted\nparted /dev/\u0026lt;disk\u0026gt; (parted) resizepart \u0026lt;no-partisi\u0026gt; 100% (parted) quit Selesai. Semoga bermanfaat, insyaAllah\n","permalink":"https://blog.annahri.com/posts/cara-extend-vm-disk-lvm/","summary":"Saya akan menjelaskan cara mudah untuk resize disk suatu VM dengan konfigurasi LVM. Asumsinya, disk sudah diextend dari sisi HVnya (PVE, ESXi, dll).\nPastikan penambahan space sudah terdeteksi dari VM melalui dmesg dan Anda akan mendapati informasi seperti ini:\n[262733.527587] sd 0:0:2:0: [abc] 4096-byte physical blocks [262733.528263] abc: detected capacity change from 214748364800 to 429496729600 Kalau ternyata belum terdeteksi, bisa dicoba untuk menjalankan perintah ini\necho 1 \u0026gt; /sys/class/block/\u0026lt;disk\u0026gt;/device/rescan Lalu coba cek kembali di dmesg.","title":"Cara Extend VM Disk untuk LVM"},{"content":"LEMP stack adalah software stack yang terdiri dari (L)inux, (E)gin-x alias Nginx, (M)ysql atau Mariadb, dan (P)HP.\nDi sini, saya akan menjelaskan bagaimana cara instalasi LEMP stack pada Ubuntu 20.04. Untuk OS berbasis RPM menyusul.\nKonfigurasi Awal Pastikan repositori Anda sudah pada kondisi terbaru dan package pada sistem anda terupgrade.\n$ sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y Jika menggunakan firewall, pastikan port 80 (HTTP) dan 443 (HTTPS) terbuka. Kalau anda menggunakan ufw maka perintahnya adalah:\n$ sudo ufw allow proto tcp from any to any port 80,443 Gunakan perintah dibawah ini kalau Anda menggunakan iptables:\n$ sudo iptables -A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT # agar rule diatas menjadi \u0026#39;permanen\u0026#39; $ iptables-save | sudo tee /etc/iptables/rules.v4 Instalasi Stack Selanjutnya instal nginx, mariadb, dan php-fpm :\n$ sudo apt install -y \\  nginx \\  mariadb-server mariadb-common \\  php7.4-fpm php7.4 php7.4-common php7.4-mysql Pastikan semua service berjalan dengan baik :\n$ sudo systemctl status nginx $ sudo systemctl status mariadb $ sudo systemctl status php7.4-fpm Jika belum berjalan, maka jalankan service-service tersebut dengan perintah:\n$ sudo systemctl enable nginx --now $ sudo systemctl enable mariadb --now $ sudo systemctl enable php7.4-fpm --now Kemudian cek juga apakah port 80 sudah listen atau belum.\n$ sudo ss -tulpn | grep \u0026#39;:80\u0026#39; Untuk port 443 masih belum. Karena setelah instalasi baru, secara asal port 80 yang listen.\nTes Web Server Untuk itu, silahkan coba buka browser menggunakan alamat IP server. Atau juga bisa menggunakan domain. Jika memang sudah diatur A recordnya.\nAtau, pengecekan bisa dilakukan dengan menggunakan curl :\n$ curl localhost \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Welcome to nginx!\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Welcome to nginx!\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;If you see this page, the nginx web server is successfully installed and working. Further configuration is required.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;For online documentation and support please refer to \u0026lt;a href=\u0026#34;http://nginx.org/\u0026#34;\u0026gt;nginx.org\u0026lt;/a\u0026gt;.\u0026lt;br/\u0026gt; Commercial support is available at \u0026lt;a href=\u0026#34;http://nginx.com/\u0026#34;\u0026gt;nginx.com\u0026lt;/a\u0026gt;.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;\u0026lt;em\u0026gt;Thank you for using nginx.\u0026lt;/em\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Tes Halaman PHP Buat file php dengan isi berikut, simpan di /var/www/html/phpinfo.php:\n\u0026lt;?php phpinfo(); ?\u0026gt;Kemudian pada browser / curl, silahkan coba akses http://IP SERVER/phpinfo.php:\n$ curl localhost/phpinfo.php \u0026lt;?php phpinfo(); ?\u0026gt; Kok tidak berhasil? Ya, karena nginx belum diatur untuk memproses halaman php.\nEdit file /etc/nginx/sites-available/default.conf kemudian cari baris berikut, dan hilangkan pagar-pagar didepannya (alias uncomment) :\nlocation ~ \\.php$ { include snippets/fastcgi-php.conf; # # With php-fpm (or other unix sockets): fastcgi_pass unix:/var/run/php/php7.4-fpm.sock; # # With php-cgi (or other tcp sockets): # fastcgi_pass 127.0.0.1:9000; } Sederhananya, blok diatas menginstrusikan nginx untuk memproses seluruh file yang berakhiran .php kepada php-fpm. Bisa melalui socket unix (unix:/path/to/socket.sock) atau socket tcp (IP:port).\nSetelah itu, reload konfigurasi nginx sudo nginx -s reload dan tes kembali menggunakan curl atau browser.\n$ curl localhost/phpinfo.php Jika menghasilkan halaman info php, maka konfigurasi sudah benar.\nKonfigurasi dan Tes Konektivitas Database Biasakan untuk selalu menjalankan mysql_secure_installation setiap kali menginstall mariadb-server atau mysql-server. Karena sesuai dengan namanya, perintah tersebut memastikan instalasi mysql itu aman alias secure.\n$ sudo mysql_secure_installation NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB SERVERS IN PRODUCTION USE! PLEASE READ EACH STEP CAREFULLY! In order to log into MariaDB to secure it, we\u0026#39;ll need the current password for the root user. If you\u0026#39;ve just installed MariaDB, and you haven\u0026#39;t set the root password yet, the password will be blank, so you should just press enter here. Enter current password for root (enter for none): OK, successfully used password, moving on... Setting the root password ensures that nobody can log into the MariaDB root user without the proper authorisation. Set root password? [Y/n] Y New password: Re-enter new password: Password updated successfully! Reloading privilege tables.. ... Success! By default, a MariaDB installation has an anonymous user, allowing anyone to log into MariaDB without having to have a user account created for them. This is intended only for testing, and to make the installation go a bit smoother. You should remove them before moving into a production environment. Remove anonymous users? [Y/n] Y Y ... Success! Normally, root should only be allowed to connect from \u0026#39;localhost\u0026#39;. This ensures that someone cannot guess at the root password from the network. Disallow root login remotely? [Y/n] Y ... Success! By default, MariaDB comes with a database named \u0026#39;test\u0026#39; that anyone can access. This is also intended only for testing, and should be removed before moving into a production environment. Remove test database and access to it? [Y/n] Y - Dropping test database... ... Success! - Removing privileges on test database... ... Success! Reloading the privilege tables will ensure that all changes made so far will take effect immediately. Reload privilege tables now? [Y/n] Y ... Success! Cleaning up... All done! If you\u0026#39;ve completed all of the above steps, your MariaDB installation should now be secure. Thanks for using MariaDB! Jawab setiap promptnya dengan Y.\nKemudian kita buat satu database percobaan dan satu database user.\n$ sudo mysql CREATEDATABASEtesdb;CREATEUSERdbuser@localhostIDENTIFIEDBY\u0026#39;password\u0026#39;;GRANTALLPRIVILEGESONtesdb.*TOdbuser@localhost;FLUSHPRIVILEGES;Buat satu file untuk uji coba konek php ke database. Simpan di /var/www/html/tesdb.php\n\u0026lt;?php $con = mysqli_connect(\u0026#34;localhost\u0026#34;,\u0026#34;dbuser\u0026#34;,\u0026#34;password\u0026#34;,\u0026#34;tesdb\u0026#34;); if (mysqli_connect_errno()) { echo \u0026#34;Failed to connect to MySQL: \u0026#34; . mysqli_connect_error(); exit(); } else { echo \u0026#34;Koneksi Database Berhasil.\u0026#34;; } ?\u0026gt;Tes kembali menggunakan browser atau curl, buka http://IP SERVER/testdb.php\n$ curl localhost/testdb.php Koneksi Database Berhasil. Selesai!\n Kesimpulan Begitu mudahnya untuk melakukan instalasi LEMP stack pada Ubuntu 20.04. Cukup menginstal nginx + mysql/mariadb + php-fpm, dan sedikit konfigurasi pada nginx.\nTentunya akan memerlukan konfigurasi lebih lanjut jika hendak menginstal webapp semacam wordpress, dan semisalnya.\nSemoga bermanfaat, insyaAllah.\n","permalink":"https://blog.annahri.com/posts/lemp-stack-ubuntu20-04-focal/","summary":"LEMP stack adalah software stack yang terdiri dari (L)inux, (E)gin-x alias Nginx, (M)ysql atau Mariadb, dan (P)HP.\nDi sini, saya akan menjelaskan bagaimana cara instalasi LEMP stack pada Ubuntu 20.04. Untuk OS berbasis RPM menyusul.\nKonfigurasi Awal Pastikan repositori Anda sudah pada kondisi terbaru dan package pada sistem anda terupgrade.\n$ sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y Jika menggunakan firewall, pastikan port 80 (HTTP) dan 443 (HTTPS) terbuka. Kalau anda menggunakan ufw maka perintahnya adalah:","title":"Instalasi LEMP Stack (Linux, Nginx, MariaDB, PHP) pada Ubuntu 20.04"}]