<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>bash on Annahri Blog</title>
    <link>https://blog.annahri.com/tags/bash/</link>
    <description>Recent content in bash on Annahri Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <lastBuildDate>Mon, 28 Feb 2022 13:21:57 +0700</lastBuildDate><atom:link href="https://blog.annahri.com/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Belajar Bash Scripting: Variabel</title>
      <link>https://blog.annahri.com/posts/belajar-bash-scripting-variabel/</link>
      <pubDate>Mon, 28 Feb 2022 13:21:57 +0700</pubDate>
      
      <guid>https://blog.annahri.com/posts/belajar-bash-scripting-variabel/</guid>
      <description>Pada artikel ini, saya akan menjelaskan bagaimana cara membuat variabel, array, dan lain-lain yang berkaitan, pada shell Bash.
Seperti yang sudah pernah dibahas pada artikel Belajar Bash Scripting lain, bahwa tentunya Bash Scripting yang dibahas ini tidaklah POSIX-compliant atau istilahnya Bashism.
Aturan penamaan Dalam membuat variabel atau array, ketentuan dalam pemberian nama adalah sebagai berikut:
 Tidak diawali dengan angka. Tidak mengandung tanda pentung, tanda @, tanda pagar # dan asterisk (*).</description>
    </item>
    
    <item>
      <title>Belajar Bash Scripting: Conditional</title>
      <link>https://blog.annahri.com/posts/belajar-bash-scripting-conditional/</link>
      <pubDate>Sun, 27 Feb 2022 20:41:25 +0700</pubDate>
      
      <guid>https://blog.annahri.com/posts/belajar-bash-scripting-conditional/</guid>
      <description>Pada artikel ini saya akan menjelaskan mengenai bagaimana cara melakukan macam-macam kondisional pada Bash scripting. Dan karena ini adalah seri khusus shell Bash, maka tentunya tidak POSIX-compliant.
Kondisional IF Struktur dasar Struktur dasar kondisional if dalam Bash scripting hampir sama dengan keumuman bahasa pemrograman, yaitu seperti dibawah ini:
if kondisi; then command command ... fi # atau if kondisi then command command ... fi Kondisi yang disebutkan diatas bisa berupa ekspresi perbandingan seperti contoh berikut:</description>
    </item>
    
    <item>
      <title>Trik Bash Shell #1</title>
      <link>https://blog.annahri.com/posts/trik-bash-shell-1/</link>
      <pubDate>Thu, 04 Nov 2021 23:28:21 +0000</pubDate>
      
      <guid>https://blog.annahri.com/posts/trik-bash-shell-1/</guid>
      <description>Saya akan menjelaskan beberapa tips dan trik dalam menggunakan shell bash yang biasa saya gunakan sehari-hari.
Reverse Search Sebagian orang biasa menggunakan history untuk melihat/mencari command-command sebelumnya yang sudah pernah diinputkan. Atau bahkan menggunakan arrow key atas untuk mencari command yang diinginkan.
Sebenarnya hampir kebanyakan shell memiliki fitur reverse search. Sesuai namanya, fitur ini bisa melakukan pencarian terhadap command yang sebelumya pernah diinputkan.
Bagaimana caranya? Cukup menekan CTRL+Rpada terminal. Dan ketikkan kata kunci untuk command yang sedang dicari.</description>
    </item>
    
  </channel>
</rss>
